{"version":3,"sources":["Home.js","Login.js","App.js","routes.js","HomeComponent.js","reportWebVitals.js","index.js"],"names":["Home","useState","items","setItems","ex_excel","map","item","index","scope","cmnd","check","className","style","height","class","placeholder","type","onChange","e","file","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","target","result","wb","XLSX","wsname","SheetNames","ws","Sheets","data","sheet_to_json","onerror","error","then","d","forEach","toString","numb","match","join","constractNo","console","log","readExcel","files","onClick","length","fetch","response","ok","status","count","charAt","alert","arr","refresh","headers","label","key","filename","Login","history","useHistory","formik","useFormik","initialValues","username","password","validationSchema","Yup","max","min","required","onSubmit","values","res","json","push","handleSubmit","id","getFieldProps","for","width","href","maproutes","path","component","exact","route","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a1f731b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport * as XLSX from \"xlsx\";\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\n\r\nconst Home = () => {\r\n    let [items, setItems] = useState([]);\r\n\r\n    const readExcel = (file) => {\r\n        // setItems([])\r\n        const promise = new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsArrayBuffer(file);\r\n\r\n            fileReader.onload = (e) => {\r\n                const bufferArray = e.target.result;\r\n\r\n                const wb = XLSX.read(bufferArray, { type: \"buffer\" });\r\n\r\n                const wsname = wb.SheetNames[0];\r\n\r\n                const ws = wb.Sheets[wsname];\r\n\r\n                const data = XLSX.utils.sheet_to_json(ws);\r\n\r\n                resolve(data);\r\n            };\r\n\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n\r\n        promise.then((d) => {\r\n            d.forEach((item, index) => {\r\n                item.check = \"Chưa kiểm tra\"\r\n                if(typeof item.cmnd !== \"undefined\")\r\n                item.cmnd = item.cmnd.toString()\r\n\r\n                var numb = item.cmnd.match(/\\d/g);\r\n                numb = numb.join(\"\");\r\n                item.cmnd= numb\r\n                item.constractNo=\"x\"+ item.constractNo\r\n            });\r\n            setItems(d);\r\n\r\n            console.log(d)\r\n        });\r\n    };\r\n    const check_tamo = () => {\r\n        // console.log(items)\r\n        items.map((item, index) => {\r\n\r\n\r\n\r\n            if (index === items.length - 1) console.log(\"done\")\r\n\r\n            console.log(items.length)\r\n            //   console.log(items)\r\n            // console.log(items[index].cmnd.length + \"    \" + items[index].cmnd + \",\")\r\n            if (items[index].cmnd.length !== 12 && items[index].cmnd.length !== 9) {\r\n                items[index].check = \"CMND/CCCD Không hợp lệ\"\r\n                console.log(item)\r\n\r\n            }\r\n            else\r\n                fetch(\r\n                    \"https://thawing-hamlet-25516.herokuapp.com/https://api.tamo.vn/web/public/client/check/identificationNumber/\" + items[index].cmnd,\r\n\r\n                    {\r\n                        // headers: {\r\n                        //     Accept: \"application/json, text/plain, */*\",\r\n                        //     \"Accept-Encoding\": \"gzip, deflate, br\",\r\n                        //     \"Accept-Language\": \"vi-VN,vi;q=0.9,en-US;q=0.8,en;q=0.7\",\r\n                        //     Connection: \"keep-alive\",\r\n                        //     Host: \"api.tamo.vn\",\r\n                        //     Origin: \"https://www.tamo.vn\",\r\n                        //     Referer: \"https://www.tamo.vn/\",\r\n                        //     \"sec-ch-ua\": '\"Google Chrome\";v=\"93\", \" Not;A Brand\";v=\"99\", \"Chromium\";v=\"93\"',\r\n                        //     \"sec-ch-ua-mobile\": '?0',\r\n                        //     \"sec-ch-ua-platform\": '\"Windows\"',\r\n                        //     \"Sect-fetch-Dest\": \"empty\",\r\n                        //     \"Sec-Fetch-Mode\": \"cors\",\r\n                        //     \"Sec-Fetch-Site\": \"same-site\",\r\n                        //     \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36\",\r\n                        // },\r\n                    }\r\n                )\r\n                    .then((response) => {\r\n                        console.log(response)\r\n                        if (!response.ok) { \r\n                            if (response.status === 404){ \r\n                                items[index].check = \"Chưa đăng ký\"\r\n                                console.log(\"Phát hiện cmnd chưa đk\")\r\n                                //    throw Error(response.statusText); \r\n                             }\r\n                             if (response.status === 429){ \r\n                                items[index].check = \"Server block\"\r\n                                console.log(\"Server block api\")\r\n                                //    throw Error(response.statusText); \r\n                             }\r\n                            return ; // will print '200 - ok'\r\n                      } else {\r\n                            // go the desired response\r\n                            items[index].check = \"Đã đăng ký\"\r\n                        }\r\n                        // return res.json();\r\n                    })\r\n                   \r\n\r\n\r\n\r\n        })\r\n    }\r\n    const ex_excel = items.map((item, index) => {\r\n        return (<tr  >\r\n            <th scope=\"row\">{index + 1}</th>\r\n            <td>{item.cmnd}</td>\r\n            <td key={item.check} >{item.check}</td>\r\n        </tr>)\r\n\r\n    })\r\n    let refresh = () => {\r\n        // console.log(items)\r\n        let check = 0\r\n        let count = 0\r\n        items.forEach(item => {\r\n            if (item.check === \"Chưa kiểm tra\") {\r\n                check = 1\r\n            }\r\n            else {\r\n                if(item.cmnd.charAt(0)==='0')\r\n                item.cmnd=\"x\"+item.cmnd\r\n                count = count + 1\r\n            }\r\n        });\r\n        if (check === 1) alert(\"Kiếm tra CMND chưa hoàn thành. Tiến độ: \" + count + \" / \" + items.length)\r\n        else {\r\n            alert(\"Đã kiểm tra xong, nhấn Download file kết quả để tải về\")\r\n        }\r\n        let arr = [...items]\r\n        setItems(arr)\r\n    }\r\n    let  headers = [\r\n        { label: \"cmnd/cccd\", key: \"cmnd\" },\r\n        { label: \"Kết quả check\", key: \"check\" },\r\n        { label: \"constractNo\", key: \"constractNo\" },\r\n        { label: \"gender\", key: \"gender\" }\r\n\r\n      ];\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\" style={{ height: \"50px\" }}> </div>\r\n                <div className=\"col-12\">\r\n                    Một số lưu ý khi sử dụng tools: <br></br>\r\n                    1/ Chọn choose File để chọn file excel chứa cmnd. Cột chứa số CMND/CCCD phải đặt tên là \"cmnd\". <br/>\r\n                    2/ File excel không quá 1000 dòng. <br/>\r\n                    3/ Nhấn nút check tamo để bắt đầu kiểm tra. <br/>\r\n                    4/ Nhấn nút xem tiến độ để xem đã check được bao nhiêu số cmnd. nếu hiện thông báo \"Đã kiểm tra xong,...\" thì có thể tải file excel về.\r\n\r\n                </div>\r\n                <div className=\"col-12\" style={{ height: \"50px\" }}> </div>\r\n                <div className=\"col-3\"></div>\r\n                <div className=\"col-6\">\r\n                    <div class=\"input-group mb-3\">\r\n\r\n                        <input class=\"form-control\" placeholder=\"\" aria-label=\"Example text with button addon\"\r\n                            aria-describedby=\"button-addon1\"\r\n                            type=\"file\" onChange={(e) => {\r\n                                const file = e.target.files[0];\r\n                                readExcel(file);\r\n                            }}\r\n\r\n\r\n                        />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <button className=\"btn btn-primary\" onClick={() => check_tamo()} >1. Check Tamo</button>\r\n                    <button className=\"btn btn-light\" onClick={() => refresh()} >2. Xem tiến độ</button>\r\n                    {/* <button className=\"btn btn-warning\" onClick={() => refresh()} >Chỉ xuất chưa đăng ký</button> */}\r\n                    {/* <button className=\"btn btn-danger\" onClick={() => refresh()} >Xuất tất cả</button> */}\r\n                    <CSVLink type=\"button\"  className=\"btn btn-danger\" data={items} headers={headers} filename=\"Check_Tamo.csv\">\r\n                       3. Download file kết quả\r\n                    </CSVLink>\r\n\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">STT</th>\r\n                                <th scope=\"col\">CMND</th>\r\n                                <th scope=\"col\">Tình trạng</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            {ex_excel}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\";\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from \"react-router\";\r\nconst Login = () => {\r\n  let history = useHistory()\r\n  const formik = useFormik({\r\n    initialValues: {\r\n        username: '',\r\n        password: '',\r\n       \r\n    },\r\n    validationSchema: Yup.object({\r\n        username: Yup.string()\r\n            .max(45, 'username quá dài')\r\n            .min(2, 'username quá ngắn')\r\n            .required('username là bắt buộc'),\r\n        password: Yup.string()\r\n            .min(2, 'Mật khẩu phải từ 6 ký tự trở lên')\r\n            .required('Mật khẩu là bắt buộc'),\r\n    }),\r\n    onSubmit: values => {\r\n      //  alert(JSON.stringify(values, null, 2));\r\n       console.log(values.username)\r\n       fetch(\"https://613f09e7e9d92a0017e173da.mockapi.io/users?username=\"+values.username)\r\n       .then(res=> res.json())\r\n       .then(res =>{\r\n         if(typeof res[0] === 'undefined') alert(\"Tên đăng nhập không tồn tại\")\r\n         else\r\n         if(res[0].username===values.username && values.password===res[0].password){\r\n           console.log(\"xx\")\r\n            history.push(\"/trang-chu\")\r\n         }\r\n         else alert(\"Tên đăng nhập hoặc tài khoản không đúng\");\r\n        // console.log(res)\r\n       })\r\n      // dispath(getLoginDataUser(values))\r\n        //console.log(user)\r\n\r\n    },\r\n});\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12\" style={{ height: \"100px\" }}></div>\r\n      <div className=\"col-3\"></div>\r\n      <div className=\"col-6\">\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div class=\"card text-center\">\r\n          {/* <div class=\"card-header\">Featured</div> */}\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Đăng nhập</h5>\r\n            <div class=\"form-outline mb-4\">\r\n              <input type=\"text\" class=\"form-control\" id=\"username\" {...formik.getFieldProps('username')} />\r\n\r\n              <label class=\"form-label\" for=\"username\">\r\n                Tên đăng nhập:\r\n              </label>\r\n              <div class=\"form-notch\">\r\n                <div class=\"form-notch-leading\" style={{ width: \"9px\" }}></div>\r\n                <div\r\n                  class=\"form-notch-middle\"\r\n                  style={{ width: \"114.4px\" }}\r\n                ></div>\r\n                <div class=\"form-notch-trailing\"></div>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-outline mb-4\">\r\n              <input type=\"password\" id=\"password\"  {...formik.getFieldProps('password')} class=\"form-control\"/>\r\n\r\n              <label class=\"form-label\" for=\"password\">\r\n                Mật khẩu:\r\n              </label>\r\n              <div class=\"form-notch\">\r\n                <div class=\"form-notch-leading\" style={{ width: \"9px\" }}></div>\r\n                <div\r\n                  class=\"form-notch-middle\"\r\n                  style={{ width: \"114.4px\" }}\r\n                ></div>\r\n                <div class=\"form-notch-trailing\"></div>\r\n              </div>\r\n            </div>\r\n            <button href=\"#\" type=\"submit\" className=\"btn btn-primary\">\r\n              Đăng nhập\r\n            </button>\r\n          </div>\r\n          <div class=\"card-footer text-muted\">Author: Tuan Kha</div>\r\n        </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"col-3\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport routes from \"./routes\";\r\nconst maproutes = routes.map((route, index) => {\r\n  return (\r\n    <Route\r\n      key={index}\r\n      path={route.path}\r\n      component={route.component}\r\n      exact={route.exact}\r\n    />\r\n  );\r\n});\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>{maproutes}</Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import Home from \"./Home\";\r\nimport HomeComponent from \"./HomeComponent\";\r\nconst routes = [\r\n    { path: [\"/\"], component: HomeComponent, exact: true },\r\n    { path: [\"/trang-chu\"], component: Home, exact: true },\r\n\r\n   \r\n];\r\nexport default routes\r\n\r\n","import React from 'react'\r\nimport Login from './Login'\r\n\r\nconst HomeComponent = () => {\r\n    return (\r\n        <div className=\"Container\">\r\n            <Login></Login>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeComponent\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}